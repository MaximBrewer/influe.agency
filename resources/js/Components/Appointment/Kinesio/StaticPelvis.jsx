

export default (props) => {

    const { data, setData, errors } = props;

    return <div className={`bg-blue-80 rounded-lg p-5 mb-8`}>

        <div className="font-medium mb-4">VIII. Статическое обследование - таз и нижние конечности</div>
        <div className="flex gap-16 my-4">
            <div className="w-1/2">
                <label className="flex items-center gap-2 mb-2">
                    <span className="">Таз</span>
                    <input
                        type="text"
                        onChange={e => setData(prev => {
                            const data = { ...prev }
                            const kinesio = data.kinesio
                            if (!kinesio.sp) kinesio.sp = {}
                            kinesio.sp.pelvis = e.target.value
                            return data
                        })}
                        value={data.kinesio.sp && data.kinesio.sp.pelvis ? data.kinesio.sp.pelvis : ``}
                        className={'rounded-md leading-none border-purple-900 w-32 pt-0.5 pb-0.5'}
                    />
                </label>
                <label className="flex items-center gap-2 mb-2">
                    <span className="">Длина НК Л</span>
                    <input
                        type="text"
                        onChange={e => setData(prev => {
                            const data = { ...prev }
                            const kinesio = data.kinesio
                            if (!kinesio.sp) kinesio.sp = {}
                            kinesio.sp.dnkl = e.target.value
                            return data
                        })}
                        value={data.kinesio.sp && data.kinesio.sp.dnkl ? data.kinesio.sp.dnkl : ``}
                        className={'rounded-md leading-none border-purple-900 w-32 pt-0.5 pb-0.5'}
                    />
                    <span className="">П</span>
                    <input
                        type="text"
                        onChange={e => setData(prev => {
                            const data = { ...prev }
                            const kinesio = data.kinesio
                            if (!kinesio.sp) kinesio.sp = {}
                            kinesio.sp.dnkp = e.target.value
                            return data
                        })}
                        value={data.kinesio.sp && data.kinesio.sp.dnkp ? data.kinesio.sp.dnkp : ``}
                        className={'rounded-md leading-none border-purple-900 w-32 pt-0.5 pb-0.5'}
                    />
                </label>
                <label className="flex items-center gap-2 mb-2">
                    <span className="">Тест 2 веса Л</span>
                    <input
                        type="text"
                        onChange={e => setData(prev => {
                            const data = { ...prev }
                            const kinesio = data.kinesio
                            if (!kinesio.sp) kinesio.sp = {}
                            kinesio.sp.t2wl = e.target.value
                            return data
                        })}
                        value={data.kinesio.sp && data.kinesio.sp.t2wl ? data.kinesio.sp.t2wl : ``}
                        className={'rounded-md leading-none border-purple-900 w-32 pt-0.5 pb-0.5'}
                    />
                    <span className="">П</span>
                    <input
                        type="text"
                        onChange={e => setData(prev => {
                            const data = { ...prev }
                            const kinesio = data.kinesio
                            if (!kinesio.sp) kinesio.sp = {}
                            kinesio.sp.t2wp = e.target.value
                            return data
                        })}
                        value={data.kinesio.sp && data.kinesio.sp.t2wp ? data.kinesio.sp.t2wp : ``}
                        className={'rounded-md leading-none border-purple-900 w-32 pt-0.5 pb-0.5'}
                    />
                </label>
                <label className="flex items-center gap-2 mb-2">
                    <span className="">Угол антеторсии Л</span>
                    <input
                        type="text"
                        onChange={e => setData(prev => {
                            const data = { ...prev }
                            const kinesio = data.kinesio
                            if (!kinesio.sp) kinesio.sp = {}
                            kinesio.sp.ual = e.target.value
                            return data
                        })}
                        value={data.kinesio.sp && data.kinesio.sp.ual ? data.kinesio.sp.ual : ``}
                        className={'rounded-md leading-none border-purple-900 w-32 pt-0.5 pb-0.5'}
                    />
                    <span className="">П</span>
                    <input
                        type="text"
                        onChange={e => setData(prev => {
                            const data = { ...prev }
                            const kinesio = data.kinesio
                            if (!kinesio.sp) kinesio.sp = {}
                            kinesio.sp.uap = e.target.value
                            return data
                        })}
                        value={data.kinesio.sp && data.kinesio.sp.uap ? data.kinesio.sp.uap : ``}
                        className={'rounded-md leading-none border-purple-900 w-32 pt-0.5 pb-0.5'}
                    />
                </label>
                <label className="flex items-center gap-2 mb-2">
                    <span className="">Длина бедренных кости Л</span>
                    <input
                        type="text"
                        onChange={e => setData(prev => {
                            const data = { ...prev }
                            const kinesio = data.kinesio
                            if (!kinesio.sp) kinesio.sp = {}
                            kinesio.sp.dbkl = e.target.value
                            return data
                        })}
                        value={data.kinesio.sp && data.kinesio.sp.dbkl ? data.kinesio.sp.dbkl : ``}
                        className={'rounded-md leading-none border-purple-900 w-32 pt-0.5 pb-0.5'}
                    />
                    <span className="">П</span>
                    <input
                        type="text"
                        onChange={e => setData(prev => {
                            const data = { ...prev }
                            const kinesio = data.kinesio
                            if (!kinesio.sp) kinesio.sp = {}
                            kinesio.sp.dbkp = e.target.value
                            return data
                        })}
                        value={data.kinesio.sp && data.kinesio.sp.dbkp ? data.kinesio.sp.dbkp : ``}
                        className={'rounded-md leading-none border-purple-900 w-32 pt-0.5 pb-0.5'}
                    />
                </label>
            </div>
            <div className="grow">
                <svg width="264" height="159" viewBox="0 0 264 159" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <line x1="12" y1="23.5" x2="252" y2="23.5" stroke="black" strokeWidth="3" />
                    <line x1="85" y1="132.5" x2="178" y2="132.5" stroke="black" strokeWidth="3" />
                    <line x1="176.759" y1="133.157" x2="250.759" y2="24.1575" stroke="black" strokeWidth="3" />
                    <line x1="13.2463" y1="24.1653" x2="86.2463" y2="133.165" stroke="black" strokeWidth="3" />
                    <path d="M114.796 15C114.711 15 114.636 14.968 114.572 14.904C114.508 14.84 114.476 14.7653 114.476 14.68C114.476 14.6267 114.482 14.568 114.492 14.504L118.46 4.152C118.503 4.04533 118.562 3.96 118.636 3.896C118.711 3.832 118.823 3.8 118.972 3.8H120.06C120.199 3.8 120.306 3.832 120.38 3.896C120.466 3.96 120.53 4.04533 120.572 4.152L124.524 14.504C124.546 14.568 124.556 14.6267 124.556 14.68C124.556 14.7653 124.524 14.84 124.46 14.904C124.396 14.968 124.322 15 124.236 15H123.42C123.292 15 123.196 14.968 123.132 14.904C123.079 14.84 123.042 14.7813 123.02 14.728L122.14 12.456H116.892L116.012 14.728C116.002 14.7813 115.964 14.84 115.9 14.904C115.836 14.968 115.74 15 115.612 15H114.796ZM117.356 11.08H121.676L119.516 5.4L117.356 11.08ZM129.711 15.16C128.783 15.16 128.004 15.0213 127.375 14.744C126.745 14.456 126.26 14.088 125.919 13.64C125.588 13.1813 125.412 12.696 125.391 12.184C125.391 12.0987 125.423 12.024 125.487 11.96C125.561 11.8853 125.647 11.848 125.743 11.848H126.559C126.687 11.848 126.783 11.88 126.847 11.944C126.911 12.008 126.953 12.0827 126.975 12.168C127.028 12.424 127.156 12.68 127.359 12.936C127.572 13.1813 127.865 13.3893 128.239 13.56C128.623 13.72 129.113 13.8 129.711 13.8C130.628 13.8 131.3 13.64 131.727 13.32C132.164 12.9893 132.383 12.552 132.383 12.008C132.383 11.6347 132.265 11.336 132.031 11.112C131.807 10.8773 131.46 10.6693 130.991 10.488C130.521 10.3067 129.913 10.1093 129.167 9.896C128.388 9.672 127.743 9.42667 127.231 9.16C126.719 8.89333 126.335 8.56267 126.079 8.168C125.833 7.77333 125.711 7.272 125.711 6.664C125.711 6.088 125.865 5.576 126.175 5.128C126.484 4.66933 126.927 4.30667 127.503 4.04C128.089 3.77333 128.799 3.64 129.631 3.64C130.292 3.64 130.868 3.73067 131.359 3.912C131.86 4.08267 132.276 4.31733 132.607 4.616C132.937 4.904 133.188 5.21867 133.359 5.56C133.529 5.89067 133.62 6.216 133.631 6.536C133.631 6.61067 133.604 6.68533 133.551 6.76C133.497 6.824 133.412 6.856 133.295 6.856H132.447C132.372 6.856 132.292 6.83467 132.207 6.792C132.132 6.74933 132.073 6.66933 132.031 6.552C131.967 6.11467 131.721 5.74667 131.295 5.448C130.868 5.14933 130.313 5 129.631 5C128.937 5 128.372 5.13333 127.935 5.4C127.508 5.66667 127.295 6.08267 127.295 6.648C127.295 7.01067 127.396 7.31467 127.599 7.56C127.801 7.79467 128.121 8.00267 128.559 8.184C128.996 8.36533 129.567 8.55733 130.271 8.76C131.124 8.99467 131.823 9.24533 132.367 9.512C132.911 9.768 133.311 10.0933 133.567 10.488C133.833 10.872 133.967 11.368 133.967 11.976C133.967 12.648 133.791 13.224 133.439 13.704C133.087 14.1733 132.591 14.536 131.951 14.792C131.321 15.0373 130.575 15.16 129.711 15.16ZM136.432 15C136.315 15 136.224 14.968 136.16 14.904C136.096 14.8293 136.064 14.7387 136.064 14.632V4.168C136.064 4.06133 136.096 3.976 136.16 3.912C136.224 3.83733 136.315 3.8 136.432 3.8H137.28C137.387 3.8 137.472 3.83733 137.536 3.912C137.611 3.976 137.648 4.06133 137.648 4.168V14.632C137.648 14.7387 137.611 14.8293 137.536 14.904C137.472 14.968 137.387 15 137.28 15H136.432ZM144.039 15.16C143.111 15.16 142.332 15.0213 141.703 14.744C141.074 14.456 140.588 14.088 140.247 13.64C139.916 13.1813 139.74 12.696 139.719 12.184C139.719 12.0987 139.751 12.024 139.815 11.96C139.89 11.8853 139.975 11.848 140.071 11.848H140.887C141.015 11.848 141.111 11.88 141.175 11.944C141.239 12.008 141.282 12.0827 141.303 12.168C141.356 12.424 141.484 12.68 141.687 12.936C141.9 13.1813 142.194 13.3893 142.567 13.56C142.951 13.72 143.442 13.8 144.039 13.8C144.956 13.8 145.628 13.64 146.055 13.32C146.492 12.9893 146.711 12.552 146.711 12.008C146.711 11.6347 146.594 11.336 146.359 11.112C146.135 10.8773 145.788 10.6693 145.319 10.488C144.85 10.3067 144.242 10.1093 143.495 9.896C142.716 9.672 142.071 9.42667 141.559 9.16C141.047 8.89333 140.663 8.56267 140.407 8.168C140.162 7.77333 140.039 7.272 140.039 6.664C140.039 6.088 140.194 5.576 140.503 5.128C140.812 4.66933 141.255 4.30667 141.831 4.04C142.418 3.77333 143.127 3.64 143.959 3.64C144.62 3.64 145.196 3.73067 145.687 3.912C146.188 4.08267 146.604 4.31733 146.935 4.616C147.266 4.904 147.516 5.21867 147.687 5.56C147.858 5.89067 147.948 6.216 147.959 6.536C147.959 6.61067 147.932 6.68533 147.879 6.76C147.826 6.824 147.74 6.856 147.623 6.856H146.775C146.7 6.856 146.62 6.83467 146.535 6.792C146.46 6.74933 146.402 6.66933 146.359 6.552C146.295 6.11467 146.05 5.74667 145.623 5.448C145.196 5.14933 144.642 5 143.959 5C143.266 5 142.7 5.13333 142.263 5.4C141.836 5.66667 141.623 6.08267 141.623 6.648C141.623 7.01067 141.724 7.31467 141.927 7.56C142.13 7.79467 142.45 8.00267 142.887 8.184C143.324 8.36533 143.895 8.55733 144.599 8.76C145.452 8.99467 146.151 9.24533 146.695 9.512C147.239 9.768 147.639 10.0933 147.895 10.488C148.162 10.872 148.295 11.368 148.295 11.976C148.295 12.648 148.119 13.224 147.767 13.704C147.415 14.1733 146.919 14.536 146.279 14.792C145.65 15.0373 144.903 15.16 144.039 15.16Z" fill="black" />
                    <path d="M116.213 154C116.096 154 116.005 153.968 115.941 153.904C115.877 153.829 115.845 153.739 115.845 153.632V143.184C115.845 143.067 115.877 142.976 115.941 142.912C116.005 142.837 116.096 142.8 116.213 142.8H120.277C121.066 142.8 121.749 142.928 122.325 143.184C122.912 143.44 123.365 143.824 123.685 144.336C124.005 144.837 124.165 145.467 124.165 146.224C124.165 146.981 124.005 147.611 123.685 148.112C123.365 148.613 122.912 148.992 122.325 149.248C121.749 149.504 121.066 149.632 120.277 149.632H117.445V153.632C117.445 153.739 117.408 153.829 117.333 153.904C117.269 153.968 117.178 154 117.061 154H116.213ZM117.429 148.288H120.197C120.986 148.288 121.578 148.112 121.973 147.76C122.368 147.408 122.565 146.896 122.565 146.224C122.565 145.563 122.373 145.051 121.989 144.688C121.605 144.325 121.008 144.144 120.197 144.144H117.429V148.288ZM129.711 154.16C128.783 154.16 128.004 154.021 127.375 153.744C126.745 153.456 126.26 153.088 125.919 152.64C125.588 152.181 125.412 151.696 125.391 151.184C125.391 151.099 125.423 151.024 125.487 150.96C125.561 150.885 125.647 150.848 125.743 150.848H126.559C126.687 150.848 126.783 150.88 126.847 150.944C126.911 151.008 126.953 151.083 126.975 151.168C127.028 151.424 127.156 151.68 127.359 151.936C127.572 152.181 127.865 152.389 128.239 152.56C128.623 152.72 129.113 152.8 129.711 152.8C130.628 152.8 131.3 152.64 131.727 152.32C132.164 151.989 132.383 151.552 132.383 151.008C132.383 150.635 132.265 150.336 132.031 150.112C131.807 149.877 131.46 149.669 130.991 149.488C130.521 149.307 129.913 149.109 129.167 148.896C128.388 148.672 127.743 148.427 127.231 148.16C126.719 147.893 126.335 147.563 126.079 147.168C125.833 146.773 125.711 146.272 125.711 145.664C125.711 145.088 125.865 144.576 126.175 144.128C126.484 143.669 126.927 143.307 127.503 143.04C128.089 142.773 128.799 142.64 129.631 142.64C130.292 142.64 130.868 142.731 131.359 142.912C131.86 143.083 132.276 143.317 132.607 143.616C132.937 143.904 133.188 144.219 133.359 144.56C133.529 144.891 133.62 145.216 133.631 145.536C133.631 145.611 133.604 145.685 133.551 145.76C133.497 145.824 133.412 145.856 133.295 145.856H132.447C132.372 145.856 132.292 145.835 132.207 145.792C132.132 145.749 132.073 145.669 132.031 145.552C131.967 145.115 131.721 144.747 131.295 144.448C130.868 144.149 130.313 144 129.631 144C128.937 144 128.372 144.133 127.935 144.4C127.508 144.667 127.295 145.083 127.295 145.648C127.295 146.011 127.396 146.315 127.599 146.56C127.801 146.795 128.121 147.003 128.559 147.184C128.996 147.365 129.567 147.557 130.271 147.76C131.124 147.995 131.823 148.245 132.367 148.512C132.911 148.768 133.311 149.093 133.567 149.488C133.833 149.872 133.967 150.368 133.967 150.976C133.967 151.648 133.791 152.224 133.439 152.704C133.087 153.173 132.591 153.536 131.951 153.792C131.321 154.037 130.575 154.16 129.711 154.16ZM136.432 154C136.315 154 136.224 153.968 136.16 153.904C136.096 153.829 136.064 153.739 136.064 153.632V143.168C136.064 143.061 136.096 142.976 136.16 142.912C136.224 142.837 136.315 142.8 136.432 142.8H137.28C137.387 142.8 137.472 142.837 137.536 142.912C137.611 142.976 137.648 143.061 137.648 143.168V153.632C137.648 153.739 137.611 153.829 137.536 153.904C137.472 153.968 137.387 154 137.28 154H136.432ZM144.039 154.16C143.111 154.16 142.332 154.021 141.703 153.744C141.074 153.456 140.588 153.088 140.247 152.64C139.916 152.181 139.74 151.696 139.719 151.184C139.719 151.099 139.751 151.024 139.815 150.96C139.89 150.885 139.975 150.848 140.071 150.848H140.887C141.015 150.848 141.111 150.88 141.175 150.944C141.239 151.008 141.282 151.083 141.303 151.168C141.356 151.424 141.484 151.68 141.687 151.936C141.9 152.181 142.194 152.389 142.567 152.56C142.951 152.72 143.442 152.8 144.039 152.8C144.956 152.8 145.628 152.64 146.055 152.32C146.492 151.989 146.711 151.552 146.711 151.008C146.711 150.635 146.594 150.336 146.359 150.112C146.135 149.877 145.788 149.669 145.319 149.488C144.85 149.307 144.242 149.109 143.495 148.896C142.716 148.672 142.071 148.427 141.559 148.16C141.047 147.893 140.663 147.563 140.407 147.168C140.162 146.773 140.039 146.272 140.039 145.664C140.039 145.088 140.194 144.576 140.503 144.128C140.812 143.669 141.255 143.307 141.831 143.04C142.418 142.773 143.127 142.64 143.959 142.64C144.62 142.64 145.196 142.731 145.687 142.912C146.188 143.083 146.604 143.317 146.935 143.616C147.266 143.904 147.516 144.219 147.687 144.56C147.858 144.891 147.948 145.216 147.959 145.536C147.959 145.611 147.932 145.685 147.879 145.76C147.826 145.824 147.74 145.856 147.623 145.856H146.775C146.7 145.856 146.62 145.835 146.535 145.792C146.46 145.749 146.402 145.669 146.359 145.552C146.295 145.115 146.05 144.747 145.623 144.448C145.196 144.149 144.642 144 143.959 144C143.266 144 142.7 144.133 142.263 144.4C141.836 144.667 141.623 145.083 141.623 145.648C141.623 146.011 141.724 146.315 141.927 146.56C142.13 146.795 142.45 147.003 142.887 147.184C143.324 147.365 143.895 147.557 144.599 147.76C145.452 147.995 146.151 148.245 146.695 148.512C147.239 148.768 147.639 149.093 147.895 149.488C148.162 149.872 148.295 150.368 148.295 150.976C148.295 151.648 148.119 152.224 147.767 152.704C147.415 153.173 146.919 153.536 146.279 153.792C145.65 154.037 144.903 154.16 144.039 154.16Z" fill="black" />
                    <path d="M9.40675 20C9.30008 20 9.20942 19.968 9.13475 19.904C9.07075 19.8293 9.03875 19.7387 9.03875 19.632V10.24H5.07075V12.816C5.07075 14.096 5.00142 15.1893 4.86275 16.096C4.72408 16.992 4.51075 17.7227 4.22275 18.288C3.93475 18.8427 3.56142 19.2587 3.10275 19.536C2.65475 19.8027 2.11075 19.952 1.47075 19.984C1.36408 19.9947 1.27342 19.9627 1.19875 19.888C1.12408 19.8133 1.08675 19.7173 1.08675 19.6V18.896C1.08675 18.6827 1.19875 18.56 1.42275 18.528C1.75342 18.4747 2.04675 18.3307 2.30275 18.096C2.56942 17.8613 2.79342 17.5147 2.97475 17.056C3.15608 16.5867 3.29475 15.9893 3.39075 15.264C3.48675 14.528 3.53475 13.648 3.53475 12.624V9.168C3.53475 9.06133 3.56675 8.976 3.63075 8.912C3.70542 8.83733 3.79608 8.8 3.90275 8.8H10.2228C10.3401 8.8 10.4308 8.83733 10.4948 8.912C10.5694 8.976 10.6068 9.06667 10.6068 9.184V19.632C10.6068 19.7387 10.5694 19.8293 10.4948 19.904C10.4308 19.968 10.3401 20 10.2228 20H9.40675Z" fill="black" />
                    <path d="M33.385 85C33.2677 85 33.177 84.968 33.113 84.904C33.049 84.8293 33.017 84.7387 33.017 84.632V74.184C33.017 74.0667 33.049 73.976 33.113 73.912C33.177 73.8373 33.2677 73.8 33.385 73.8H39.545C39.6623 73.8 39.753 73.8373 39.817 73.912C39.8917 73.976 39.929 74.0667 39.929 74.184V74.824C39.929 74.9307 39.8917 75.0213 39.817 75.096C39.753 75.16 39.6623 75.192 39.545 75.192H34.585V84.632C34.585 84.7387 34.5477 84.8293 34.473 84.904C34.409 84.968 34.3183 85 34.201 85H33.385Z" fill="black" />
                    <path d="M77.4068 139C77.3001 139 77.2094 138.968 77.1348 138.904C77.0708 138.829 77.0388 138.739 77.0388 138.632V129.24H73.0708V131.816C73.0708 133.096 73.0014 134.189 72.8628 135.096C72.7241 135.992 72.5108 136.723 72.2228 137.288C71.9348 137.843 71.5614 138.259 71.1028 138.536C70.6548 138.803 70.1108 138.952 69.4708 138.984C69.3641 138.995 69.2734 138.963 69.1988 138.888C69.1241 138.813 69.0868 138.717 69.0868 138.6V137.896C69.0868 137.683 69.1988 137.56 69.4228 137.528C69.7534 137.475 70.0468 137.331 70.3028 137.096C70.5694 136.861 70.7934 136.515 70.9748 136.056C71.1561 135.587 71.2948 134.989 71.3908 134.264C71.4868 133.528 71.5348 132.648 71.5348 131.624V128.168C71.5348 128.061 71.5668 127.976 71.6308 127.912C71.7054 127.837 71.7961 127.8 71.9028 127.8H78.2228C78.3401 127.8 78.4308 127.837 78.4948 127.912C78.5694 127.976 78.6068 128.067 78.6068 128.184V138.632C78.6068 138.739 78.5694 138.829 78.4948 138.904C78.4308 138.968 78.3401 139 78.2228 139H77.4068Z" fill="black" />
                    <path d="M254.354 20C254.236 20 254.146 19.968 254.082 19.904C254.018 19.8293 253.986 19.7387 253.986 19.632V9.184C253.986 9.06667 254.018 8.976 254.082 8.912C254.146 8.83733 254.236 8.8 254.354 8.8H262.242C262.359 8.8 262.45 8.83733 262.514 8.912C262.588 8.976 262.626 9.06667 262.626 9.184V19.632C262.626 19.7387 262.588 19.8293 262.514 19.904C262.45 19.968 262.359 20 262.242 20H261.426C261.319 20 261.228 19.968 261.154 19.904C261.09 19.8293 261.058 19.7387 261.058 19.632V10.24H255.554V19.632C255.554 19.7387 255.516 19.8293 255.442 19.904C255.378 19.968 255.287 20 255.17 20H254.354Z" fill="black" />
                    <path d="M222.385 85C222.268 85 222.177 84.968 222.113 84.904C222.049 84.8293 222.017 84.7387 222.017 84.632V74.184C222.017 74.0667 222.049 73.976 222.113 73.912C222.177 73.8373 222.268 73.8 222.385 73.8H228.545C228.662 73.8 228.753 73.8373 228.817 73.912C228.892 73.976 228.929 74.0667 228.929 74.184V74.824C228.929 74.9307 228.892 75.0213 228.817 75.096C228.753 75.16 228.662 75.192 228.545 75.192H223.585V84.632C223.585 84.7387 223.548 84.8293 223.473 84.904C223.409 84.968 223.318 85 223.201 85H222.385Z" fill="black" />
                    <path d="M185.354 139C185.236 139 185.146 138.968 185.082 138.904C185.018 138.829 184.986 138.739 184.986 138.632V128.184C184.986 128.067 185.018 127.976 185.082 127.912C185.146 127.837 185.236 127.8 185.354 127.8H193.242C193.359 127.8 193.45 127.837 193.514 127.912C193.588 127.976 193.626 128.067 193.626 128.184V138.632C193.626 138.739 193.588 138.829 193.514 138.904C193.45 138.968 193.359 139 193.242 139H192.426C192.319 139 192.228 138.968 192.154 138.904C192.09 138.829 192.058 138.739 192.058 138.632V129.24H186.554V138.632C186.554 138.739 186.516 138.829 186.442 138.904C186.378 138.968 186.287 139 186.17 139H185.354Z" fill="black" />
                    <circle cx="12" cy="25" r="5" fill="black" />
                    <circle cx="252" cy="25" r="5" fill="black" />
                    <circle cx="178" cy="134" r="5" fill="black" />
                    <circle cx="213" cy="80" r="5" fill="black" />
                    <circle cx="85" cy="134" r="5" fill="black" />
                    <circle cx="51" cy="80" r="5" fill="black" />
                </svg>
            </div>
        </div>
    </div>
}
